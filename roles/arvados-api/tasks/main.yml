#######################################
# Tasks file for the Arvados API role #
#######################################

- name: Install Arvados API server and dependencies
  sudo: yes
  yum: name={{ item }} state=latest update_cache=yes
  with_items:
    - bison
    - make
    - automake
    - gcc
    - gcc-c++
    - libcurl-devel
    - git
    - python-psycopg2
    - arvados-api-server

- name: Make sure PostgreSQL is running
  sudo: yes
  service: name=postgresql state=started

- name: Create a new postgresql user with permission to create its own databases.
  become: yes
  become_user: postgres
  become_method: sudo
  postgresql_user:
    name: arvados
    password: "{{ db_password }}"
    encrypted: True
    role_attr_flags: NOCREATEROLE,NOSUPERUSER,CREATEDB

- name: Create database arvados_production
  become: yes
  become_user: postgres
  become_method: sudo
  postgresql_db:
    name: arvados_production
    encoding: UTF8
    owner: arvados
    template: template0

- name: "Create arvados-api app and database config"
  sudo: yes
  file: path="/etc/arvados/api" state=directory mode=0700

- name: Create directory to store SSL certs
  sudo: yes
  file: path="{{ SSL_CERT_PATH }}" state=directory

- name: create self-signed SSL cert
  sudo: yes
  command: openssl req -new -nodes -x509 -subj "/C=EU/ST=Sweden/L=Stockholm/O=IT/CN=${ansible_fqdn}" -days 3650 -keyout /etc/nginx/ssl/server.key -out /etc/nginx/ssl/server.crt -extensions v3_ca creates=/etc/nginx/ssl/server.crt

- name: Copy API database config
  sudo: yes
  template: src=database.j2 dest=/etc/arvados/api/database.yml

- name: Copy API application config
  sudo: yes
  template: src=application.j2 dest=/etc/arvados/api/application.yml
  notify: restart nginx

- name: Create directory where user git repositories will be stored.
  sudo: yes
  file: path="{{ git_repositories_dir }}" state=directory

- name: Create puma runit service dir
  sudo: yes
  file: path="{{ puma_runit }}" state=directory

- name: Setting up runit config for Puma
  sudo: yes
  copy: src=puma.sh dest="{{ puma_runit }}/run" mode=700 owner=root group=root
